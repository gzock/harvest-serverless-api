AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    harvest

    Sample SAM Template for harvest

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 30
        MemorySize: 512

Resources:
    #HarvestApi:
    #    Type: AWS::Serverless::Api
    #    Properties:
    #        StageName: Prod
    #        GatewayResponses:
    #          UNAUTHORIZED:
    #            StatusCode: 401
    #            ResponseTemplates:
    #              "application/json": '{ "message": $context.error.messageString }'
    #            ResponseParameters:
    #              Paths:
    #                path-key: "'value'"
    #              QueryStrings:
    #                query-string-key: "'value'"
    #              Headers:
    #                Access-Control-Expose-Headers: "'WWW-Authenticate'"
    #                Access-Control-Allow-Origin: "'*'"
    #                WWW-Authenticate: >-
    #                  'Bearer realm="admin"'
    #HarvestApi:
    #    Type: AWS::Serverless::Api
    #    Properties:
    #        StageName: Prod
    #        DefinitionBody:
    #            securityDefinitions:
    #                cognitoUserPool:
    #                    type: apiKey
    #                    name: "Authorization"
    #                    in: header
    #                    x-amazon-apigateway-authtype: cognito_user_pools
    #                    x-amazon-apigateway-authorizer:
    #                        type: cognito_user_pools
    #                        providerARNs:
    #                            - arn:aws:cognito-idp:ap-northeast-1:405369695225:userpool/ap-northeast-1_KrEPljcrG
    #            paths:
    #                "/":
    #                    get:
    #                        security:
    #                            - cognitoUserPool: []
        #Cors:
        #    AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
        #    AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        #    AllowOrigin: "'*'"
        #    AllowCredentials: "'true'"
        # https://github.com/awslabs/serverless-application-model/blob/master/examples/2016-10-31/api_cognito_auth/template.yaml

    ProjectsFunction:
        Type: AWS::Serverless::Function
        Properties:
            Timeout: 120
            CodeUri: routes
            Handler: projects/projects.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects
                        Method: options
                GetProjects:
                    Type: Api
                    Properties:
                        Path: /projects
                        Method: get
                CreateProject:
                    Type: Api
                    Properties:
                        Path: /projects
                        Method: post
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}
                        Method: options
                GetProject:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}
                        Method: get
                UpdateProject:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}
                        Method: put
                DeleteProject:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}
                        Method: delete
                ForCORS3:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/import
                        Method: options
                BatchImport:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/import
                        Method: POST

    ProjectUsersFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: routes
            Handler: projects/users.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users
                        Method: options
                GetUsers:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users
                        Method: GET
                CreateUser:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users
                        Method: POST
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users/{user_id}
                        Method: options
                GetUser:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users/{user_id}
                        Method: GET
                UpdateUser:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users/{user_id}
                        Method: PUT
                DeleteUser:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/users/{user_id}
                        Method: DELETE

    PlacesFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: routes
            Handler: places/places.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places
                        Method: options
                GetPlaces: #プロジェクト配下の全てのplaceを取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places
                        Method: get
                CreatePlace: #project配下(root)に新規placeを作成
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places
                        Method: post
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}
                        Method: options
                GetPlace: #place単体の情報を取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}
                        Method: get
                GetPlaceChildren: #指定されたplaceのchildrenを取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}/children
                        Method: get
                ForCORS3:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}/children
                        Method: options
                CreatePlaceOfChild: #指定されたplace_id配下にplaceを作成
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}
                        Method: post
                UpdatePlace: #placeの名前など単体の情報の何かを更新
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}
                        Method: put
                DeletePlace: #place単体を削除
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}
                        Method: delete

    TargetsFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: routes
            Handler: targets/targets.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets
                        Method: options
                #GET: #プロジェクト配下の全てのplaceを取得 #place側と統合予定
                #    Type: Api
                #    Properties:
                #        Path: /projects/{project_id}/targets
                #        Method: get
                GetTarget: #target単体の情報を取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}
                        Method: get
                #GET_CHILDREN: #指定されたplaceのchildrenを取得 #place側と統合予定
                #    Type: Api
                #    Properties:
                #        Path: /projects/{project_id}/places/{place_id}/targets
                #        Method: get
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}
                        Method: options
                UpdateTarget: #targetの名前など単体の情報の何かを更新
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}
                        Method: put
                DeleteTarget: #target単体を削除
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}
                        Method: delete
                CreateTargetOnProject: #project配下(root)に新規placeを作成
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets
                        Method: post
                ForCORS3:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}/targets
                        Method: options
                CreateTargetOnPlace: #指定されたplace_id配下にtargetを作成
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/places/{place_id}/targets
                        Method: post

    PhotosFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: routes
            Handler: photos/photos.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos
                        Method: options
                GetAllPhotosForTarget: #target単体配下の写真全てを取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos
                        Method: get
                CreatePhoto: #target単体配下に写真を追加
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos
                        Method: post
                AdoptPhoto: #写真を採用
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos
                        Method: put
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos/{photo_id}
                        Method: options
                GetPhoto: #target単体配下の写真単体を取得
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos/{photo_id}
                        Method: get
                UpdatePhoto: #target単体配下の写真の何かを変更
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos/{photo_id}
                        Method: put
                DeletePhoto: #target単体配下の写真単体を削除
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/targets/{target_id}/photos/{photo_id}
                        Method: delete
    GenerateFunction:
        Type: AWS::Serverless::Function
        Properties:
            Timeout: 120
            CodeUri: routes
            Handler: generate/generate.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/generate/{type}
                        Method: options
                InvokeGenerate: #target単体配下に写真を追加
                    Type: Api
                    Properties:
                        Path: /projects/{project_id}/generate/{type}
                        Method: post
    NotificationsDispatcherFunction:
        Type: AWS::Serverless::Function
        Properties:
            Timeout: 10
            CodeUri: routes
            Handler: notifications/dispatcher.lambda_handler #TODO: ここを複数作る必要がある？？
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
    NotificationsFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: routes
            Handler: notifications/notifications.lambda_handler
            Runtime: python3.6
            Environment:
                Variables:
                    PYTHONPATH: /var/task/site-packages
                    DYNAMO_HOST: ""
                    DYNAMO_PORT: ""
            Events:
                ForCORS:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications
                        Method: options
                GetAllNotifications:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications
                        Method: get
                ForCORS2:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications/{notification_id}
                        Method: options
                GetNotification:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications/{notification_id}
                        Method: get
                ReadNotification:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications/{notification_id}
                        Method: put
                DeleteNotification:
                    Type: Api
                    Properties:
                        Path: /users/{user_id}/notifications/{notification_id}
                        Method: delete
#    HarvestApi:
#        Type: AWS::Serverless::Api
#        Properties:
#            StageName: Prod
#            Auth:
#                DefaultAuthorizer: HarvestAuthorizer
#                Authorizers:
#                    HarvestAuthorizer:
#                        UserPoolArn: "arn:aws:cognito-idp:ap-northeast-1:405369695225:userpool/ap-northeast-1_KrEPljcrG"
#                        Identity:
#                            Header: "Authorization"
#    Deployment: 
#        DependsOn: PhotosFunction
#        Type: AWS::ApiGateway::Deployment
#        Properties: 
#          RestApiId: 
#            Ref: HarvestApi
#          StageName: Prod

#Outputs:
#
#    HelloWorldApi:
#      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#
#    HelloWorldFunction:
#      Description: "Hello World Lambda Function ARN"
#      Value: !GetAtt HelloWorldFunction.Arn
#
#    HelloWorldFunctionIamRole:
#      Description: "Implicit IAM Role created for Hello World function"
#      Value: !GetAtt HelloWorldFunctionRole.Arn
