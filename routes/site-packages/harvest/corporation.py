import os, sys
import json
from uuid import uuid4
from datetime import datetime
from decode_verify_jwt import decode_verify_jwt

from harvest.controllers.corporation_controller import CorporationController
from harvest.auth import Auth
from harvest.exception import ActionDeniedError

class Corporation():
  corporation_id = None
  corp_info = None

  #def __init__(self, corp_info):
  def __init__(self, host=None, port=None):
    self.corp = CorporationController(host, port)
    #self.corp.set_corporation_info(corp_info)
    #self.corp_infp = corp_info

  # common setters
  def set_corporation_id(self, corporation_id):
    self.corp.set_corporation_id(corporation_id)

  def list_users(self):
    #if not self.auth.guard("admin"):
    #  raise ActionDeniedError()
    return self.corp.list_users()

  def show(self):
    #if not self.auth.guard("admin"):
    #  raise ActionDeniedError()
    return self.corp.show()

  def create_user(self, corporation_id, username, kana_username, email, password):
    return self.corp.create_user(corporation_id, username, kana_username, email, password)

  #def join_user(self, user_id):
  #  return self.corp.join()

  #def search_users(self):
  #  if not self.auth.guard("admin"):
  #    raise ActionDeniedError()
  #  return self.corp.accept(user_id)

  def delete_user(self, user_id):
    #if not self.auth.guard("admin"):
    #  raise ActionDeniedError()
    return self.corp.delete_user(user_id)

  #def update(self, user_id):
  #  if not self.auth.guard("admin"):
  #    raise ActionDeniedError()
  #  return self.user.reject(user_id)
