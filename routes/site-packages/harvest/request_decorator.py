import json

class RequestDecorator():

  def __init__(self, event):
    if not event:
      raise ValueError

    print(event)
    if "requestContext" in event and "identity" in event["requestContext"]:
      self.__identity_id = None
      self.__username = None
      self.__path_param = None
      if "cognitoIdentityId" in event["requestContext"]["identity"]:
        self.__identity_id = event["requestContext"]["identity"]["cognitoIdentityId"]
      if "authorizer" in event["requestContext"]:
        self.__username = event["requestContext"]["authorizer"]["claims"]["cognito:username"]
      self.__method = event["requestContext"]["httpMethod"]
      self.__path = event["path"]
      # pathParametersが存在しない場合、Noneになっている
      if event["pathParameters"]:
        self.__path_param = event["pathParameters"]
      self.__query = event["queryStringParameters"]
      self.__body = event["body"]
      self.__event = event

    else:
      raise ValueError
  
  def get_identity_id(self):
    return self.__identity_id

  def get_username(self):
    return self.__username

  def get_method(self):
    return self.__method

  def get_path(self):
    return self.__path

  def get_path_params(self):
    return self.__path_param

  def get_query(self):
    return self.__query

  def get_body(self):
    return json.loads(self.__body)

  def get_raw_event(self):
    return self.__event
