import os, sys
import json
import logging
import re
from uuid import uuid4, UUID
from datetime import datetime

from harvest.drivers.cognito_driver import CognitoDriver
from harvest.controllers.role_controller import RoleController

COGNITO_USER_POOL_ID="ap-northeast-1_KrEPljcrG"

class CorporationController():

  logger = logging.getLogger(__name__)
  logger.addHandler(logging.NullHandler())
  logger.setLevel(logging.DEBUG)

  def __init__(self, host, port):
    self.cognito = CognitoDriver(COGNITO_USER_POOL_ID)

  def set_corporation_id(self, user_id):
    self.corporation_id = str(user_id)

  # その企業IDに結びついたユーザー一覧を取得
  def list_users(self, attr):
    users = cognito.list_users(attr=attr, filter_attr="corporation_id")
    self.logger.info("list corporation users: " + str(users))
    users = { item["Name"]: item["Value"] for item in users }
    self.logger.info("proccesing cognito user data: " + str(detail))

    if not users:
      # TODO: カスタム例外なげる
      raise ValueError
    return users

  def delete_user(self, user_id=None):
    # 企業IDに結びついたIDの削除
    # 7月時点では未実装？

    #if not self.user_id or not self.project_id:
    #  raise ValueError
    #if not user_id:
    #  user_id = self.user_id
    #return self.role.delete(user_id)

  def update_user(self, role, user_id=None):
    # 企業IDに結びついたユーザーの情報変更
    # cognito api叩いて、カスタム属性などを編集？

    #if not self.project_id:
    #  raise ValueError
    #if not user_id:
    #  user_id = self.user_id
    #return self.role.update(role, user_id)

  def update(self):
    # 企業IDの情報変更
    # 必要か？何を編集させる？
