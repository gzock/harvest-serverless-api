class HarvestAbstractException(Exception):
  pass

class ProjectError(HarvestAbstractException):
  pass

class RoleError(HarvestAbstractException):
  pass

class PlaceError(HarvestAbstractException):
  pass

class TargetError(HarvestAbstractException):
  pass

class PhotoError(HarvestAbstractException):
  pass

class GenerateError(HarvestAbstractException):
  pass

class AuthError(HarvestAbstractException):
  pass

# code number range mapping
# 0: succefully
# 1-99: common error
# 100-199: auth error
# 200-299: project error
# 300-399: place error
# 400-499: target error
# 500-599: photo error
# 600-699: generate error

class ActionDeniedError(AuthError):
  title = "Action denied"
  message = "The action is denied."
  code = 101
  def __str__(self):
    return self.title

class NotMeetRequirementsToDeleteError(PlaceError):
  title = "Not Meet Requirements To Delete"
  message = "The execute action is not meet requirements to delete."
  code = 301
  def __str__(self):
    return self.title
  
class PhotoIsNotFoundError(PhotoError):
  title = "Photo Is Not Found"
  message = "designated photo is not found."
  code = 501
  def __str__(self):
    return self.title

class LastOnePhotoIsCanNotDeleteError(PhotoError):
  title = "Last One Photo Is Can Not Delete"
  message = "last one photo is can not delete."
  code = 502
  def __str__(self):
    return self.title

class AdoptedPhotoIsCanNotDeleteError(PhotoError):
  title = "Adopted Photo Is Can Not Delete"
  message = "adopted photo is can not delete."
  code = 503
  def __str__(self):
    return self.title

