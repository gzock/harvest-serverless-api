import os, sys

from harvest.controllers.generate_controller import GenerateController
from harvest.auth import Auth
from harvest.exception import ActionDeniedError

class Generate():

  def __init__(self, host, port):
    self.gen = GenerateController(host, port)

  def gen_zip(self, project_id, by_name=True, workspace="/tmp", result_name="photos_result.zip", need_download_url=True):
    if not self.auth.guard("admin"):
      raise ActionDeniedError()
    return self.gen.gen_zip(
        project_id,
        by_name=by_name,
        workspace=workspace,
        result_name=result_name,
        need_download_url=need_download_url
    )

  def gen_excel_doc(self, project_id, has_hierarchy=False, workspace="/tmp", template="basic_1.xlsx", result="photos_result.xlsx", need_download_url=True):
    if not self.auth.guard("admin"):
      raise ActionDeniedError()
    return gen.gen_excel_doc(
        project_id=project_id,
        has_hierarchy=has_hierarchy,
        template=template,
        need_download_url=need_download_url
    )
